var express = require("express");
var bodyParser = require("body-parser");

var morgan = require("morgan");
var server = require("http").Server(app);
var io = require("socket.io")(server);
var socket = 3000;
var path = require("path");
var session = require("express-session");
var app = express();
var nspDefault = io.of("/default");

nspDefault.on("connection", function(socket) {
  console.log("Client has connected");
  socket.emit("Client has connected");
  socket.on("room", function(roomAssignment) {
    console.log(roomAssignment);
    socket.join(roomAssignment);
    socket.room = roomAssignment;
  });
  socket.on("message", function(messageData) {
    console.log(messageData);
    console.log(socket.room);
    nspDefault.in(socket.room).emit("message", messageData);
  });
});
nspDefault.on("message", function(messageData) {
  nspDefault.to("");
});

app.use(morgan("dev"));
app.use(express.urlencoded({ extended: false }));
app.use(express.json());

server.listen(socket, function() {
  console.log("Listening on" + socket);
});

app.use(
  express.static(__dirname + "/pages", {
    extensions: ["html"]
  })
);

app.use((req, res, next) => {
  const error = new Error("not found");
  error.status = 404;
  next(error);
});

app.use((req, res, next) => {
  res.header("Access-Control-Allow-Origin", "*");
  if (req.method === "OPTIONS") {
    // amend with all allowed HTTP methods
    res.header("Access-Control-Allow-Methods", "GET, POST, PUT, PATCH, DELETE");
    return res.status(200).json({});
  }
  next();
});

app.use((error, req, res, next) => {
  res.status(error.status || 500);
  res.sendFile(path.join(__dirname, "./static", "404.html"));
});

module.exports = app;
